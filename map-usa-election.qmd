---
title: "Map: US election 2024"
format: html
---

In this notebook, I am going to showcase how you can use R to create a map of the United States with election results. Specifically, I will use the `usmap` package to plot a map of the United States and color each state based on the winner of the 2024 presidential election.

::: {.callout-note}
The `usmap` package is a simple and easy-to-use package for creating maps of the United States in R. It provides a convenient way to plot data on a map of the United States and customize the appearance of the map.
:::

# Load the necessary libraries
```{r}
# install the usmap package if you haven't already
library(usmap)
library(tidyverse)
```

# Create the election results data

Since the accurate election results data is not available, I will create a simplified dataset with the winner of the 2024 presidential election in each state. The dataset contains two columns: `state` and `winner`. The `state` column contains the two-letter abbreviation for each state, and the `winner` column contains the name of the candidate who won the state.

The reason I use the two-letter abbreviation for each state is that the `usmap` package requires the state names to be in this format to plot the map correctly.

Here, I use the `data.frame()` function to create a data frame `election_data` with the 2024 US presidential election results data. The `state` column contains the two-letter abbreviation for each state, and the `winner` column contains the name of the candidate who won the state.

```{r}
# Election results data
election_data <- data.frame(
  state = c("AL", "AK", "AZ", "AR", "CA",
            "CO", "CT", "DE", "FL", "GA",
            "HI", "ID", "IL", "IN", "IA", "KS", 
            "KY", "LA", "ME", "MD", "MA",
            "MI", "MN", "MS", "MO", "MT",
            "NE", "NV", "NH", "NJ", "NM",
            "NY", "NC", "ND", "OH", "OK",
            "OR", "PA", "RI", "SC",
            "SD", "TN", "TX", "UT", "VT", "VA",
            "WA", "WV", "WI", "WY"),
  winner = c("Trump", "Trump", "Harris", "Trump", "Harris",
             "Harris", "Harris", "Harris", "Trump", "Trump",
             "Harris", "Trump", "Harris", "Trump", "Trump", "Trump",
             "Trump", "Trump", "Harris", "Harris", "Harris",
             "Harris", "Harris", "Trump", "Trump", "Trump",
             "Trump", "Harris", "Harris", "Harris", "Harris",
             "Harris", "Trump", "Trump", "Trump", "Trump",
             "Harris", "Harris", "Harris", "Trump",
             "Trump", "Trump", "Trump", "Trump", "Harris", "Harris",
             "Harris", "Trump", "Harris", "Trump")
)
```

# Explore the `election_data`

```{r}
# Display the first few rows of the election_data data frame
head(election_data)
```

```{r}
glimpse(election_data)
```
# Visualization

It is very common to see news outlets to use maps to visualize election results. This is also because states are the basic unit of the US presidential election and it provides a clear and intuitive way to show the distribution of votes across the country.

Here, I will use the `plot_usmap()` function from the `usmap` package to create a map of the United States with the election results. 

```{r}
# Plotting the map with election results
plot_usmap(data = election_data, values = "winner", lines = "white") + # <1>
  scale_fill_manual(values = c("Trump" = "red", "Harris" = "blue")) + # <2>
  labs(title = "2024 US Presidential Election Results", # <3>
       fill = "Winner") + 
  theme_minimal() + # <4>
  # remove grid lines and axis 
  theme(panel.grid = element_blank(), # <5>
        axis.text = element_blank(), 
        axis.title = element_blank())
```

1. The `plot_usmap()` function creates a map of the United States with the election results. The `data` argument specifies the data frame containing the election results data, and the `values` argument specifies the column in the data frame that contains the winner of each state.
2. The `scale_fill_manual()` function customizes the fill colors of the map based on the winner of each state. In this case, I use red for Trump and blue for Harris.
3. The `labs()` function adds a title to the map and labels the legend with "Winner".
4. The `theme_minimal()` function sets the theme of the plot to a minimal style.
5. The `theme()` function is used to remove grid lines and axis labels from the plot to make it cleaner and more focused on the election results.

